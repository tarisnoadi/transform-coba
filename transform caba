#include "opencv\cv.h"
#include "opencv\highgui.h"

void main() {
int key = 0;
CvCapture *capture = cvCaptureFromCAM( 0 );
//keluar pake keyboard 'q'
while( key != 'n' ) {
IplImage *frame = cvQueryFrame( capture );
if( !frame ) break;
//----------- disini penambahannya--------------------------------
IplImage* gray = cvCreateImage(cvGetSize(frame), IPL_DEPTH_8U, 0 );
cvCvtColor( frame, gray, CV_BGR2GRAY );
cvShowImage( "grayscale", gray );
IplImage* canny = cvCreateImage(cvGetSize(gray), IPL_DEPTH_8U, 0 );
cvCanny( gray, canny, 30, 200, 3 );
cvShowImage( "Canny", canny );
int i;
CvMemStorage* storage = cvCreateMemStorage(0);
#if 0
CvSeq* lines = cvHoughLines2( canny, storage, CV_HOUGH_PROBABILISTIC, 1,
CV_PI/180, 80,30, 10 );
for( i = 0; i < lines -> total; i++ ) {
CvPoint* line = (CvPoint*) cvGetSeqElem( lines, i );
cvLine( frame, line[0], line[1],
CV_RGB(0,255,0), 2, 8 );
}
#else
CvSeq* circles = cvHoughCircles( gray, storage, CV_HOUGH_GRADIENT, 2,
gray->height/4, 200, 100,15,30 );
for( i = 0; i < circles->total; i++ ) {
float* circle = (float*)cvGetSeqElem( circles, i );
cvCircle( frame, cvPoint(cvRound(circle[0]),cvRound(circle[1])), 6,
CV_RGB(0,255,0), -1, 8, 0 );
}
#endif //----------------------------------------------------------------
cvShowImage( "Asli", frame );
key = cvWaitKey( 1 );
}
cvReleaseCapture( &capture );
}
